services:

  # Astro default Services
  dag-processor:
    container_name: dag-processor
    networks:
      - mini-proj_6dcc03_airflow
      - project_net

  api-server:
    container_name: api-server
    networks:
      - mini-proj_6dcc03_airflow
      - project_net

  scheduler:
    container_name: scheduler

  triggerer:
    container_name: triggerer

  postgres:
    container_name: postgres

  
  # Custom Services
  postgres-db:
    image: postgres:14
    container_name: postgres-db
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-test_database}
      POSTGRES_USER: ${POSTGRES_USER:-test_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test_password1234}
    ports:
      - "${POSTGRES_HOST_PORT:-5436}:5432"
    volumes:
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres-data:/var/lib/postgresql/data
    networks:
      - project_net

  minio:
    # container_name: minio
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWARD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    networks:
      - project_net

  mc:
    # container_name: mc
    image: minio/mc:latest
    restart: on-failure
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWARD} &&
      /usr/bin/mc mb --ignore-existing myminio/${MINIO_BUCKET_NAME} &&
      /usr/bin/mc policy set public myminio/${MINIO_BUCKET_NAME} &&
      tail -f /dev/null
      "
    networks:
      - project_net

networks:
  mini-proj_6dcc03_airflow:
    external: True

  project_net:
    name: project_net
    driver: bridge


volumes:
  postgres-data: