services:

  # Astro default Services
  dag-processor:
    networks:
      - project_net


  api-server:
    networks:
      - project_net
 
  scheduler:
    networks:
      - project_net

  triggerer:
    networks:
      - project_net


  postgres:
    ports:
      - "5433:5432"
    networks:
      - project_net

  
  # Custom Services
  postgres-db:
    image: postgres:14
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-test_database}
      POSTGRES_USER: ${POSTGRES_USER:-test_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test_password1234}
    ports:
      - "${POSTGRES_HOST_PORT:-5436}:5432"
    volumes:
      - ./sql_scripts:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    networks:
      - project_net

  minio:
    # container_name: minio
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWARD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    ports:
      - "9100:9000"
      - "9101:9001"
    command: server /data --console-address ":9001"
    volumes:
      - ../minio-data:/data
    networks:
      - project_net

  mc:
    # container_name: mc
    image: minio/mc:latest
    restart: on-failure
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWARD} &&
      /usr/bin/mc mb --ignore-existing myminio/${MINIO_BUCKET_NAME} &&
      /usr/bin/mc policy set public myminio/${MINIO_BUCKET_NAME} &&
      tail -f /dev/null
      "
    networks:
      - project_net

  metabse:
    # container_name: mc
    image: metabase/metabase:latest
    restart: on-failure
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${METABASE_DB_DATABASE}
      MB_DB_PORT: 5432
      MB_DB_USER: ${METABASE_DB_USER}
      MB_DB_PASS: ${METABASE_DB_PASSWORD}
      MB_DB_HOST: postgres-db  
    networks:
      - project_net


  # datagen:
  #   image: datagen-simulator:latest
  #   environment:
  #     - MINIO_HOST=${MINIO_DOCKER_HOST}
  #     - MINIO_PORT=${MINIO_DOCKER_PORT}
  #     - BATCH_INTERVAL=${BATCH_INTERVAL}
  #     - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
  #     - MINIO_ROOT_USER=${MINIO_ROOT_USER}
  #     - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWARD}
  #   depends_on:
  #     minio:
  #       condition: service_healthy
  #   volumes:
  #     - ./logs/datagen:/app/logs 

# networks:
#   mini-proj_6dcc03_airflow:
#     external: True

  project_net:
    name: project_net
    driver: bridge


volumes:
  postgres-data: